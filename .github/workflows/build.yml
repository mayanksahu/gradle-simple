name: Build

on:
  push:
    branches:
      - master
  pull_request:
      types: [opened, synchronize, reopened]


# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     permissions: read-all
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - name: Set up JDK 17
#         uses: actions/setup-java@v1
#         with:
#           java-version: 17
#       - name: Cache SonarQube packages
#         uses: actions/cache@v1
#         with:
#           path: ~/.sonar/cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
#       - name: Cache Gradle packages
#         uses: actions/cache@v1
#         with:
#           path: ~/.gradle/caches
#           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#           restore-keys: ${{ runner.os }}-gradle
#       - name: Build and analyze
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#         run: ./gradlew build sonar --info
#   sonarqube:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         # Disabling shallow clone is recommended for improving relevancy of reporting.
#         fetch-depth: 0

#     # Triggering SonarQube analysis as results of it are required by Quality Gate check.
#     - name: SonarQube Scan
#       uses: sonarsource/sonarqube-scan-action@master
#       env:
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

#     # Check the Quality Gate status.
#     - name: SonarQube Quality Gate check
#       id: sonarqube-quality-gate-check
#       uses: sonarsource/sonarqube-quality-gate-action@master
#       # Force to fail step after specific time.
#       timeout-minutes: 5
#       env:
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL

#     # Optionally you can use the output from the Quality Gate in another step.
#     # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
#     - name: "Example show SonarQube Quality Gate Status value"
#       run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"